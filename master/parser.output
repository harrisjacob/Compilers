Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_UNARY_NEG
   TOKEN_BACKSLASH
   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_EOF

    2 decl_list: decl decl_list
    3          | %empty

    4 decl: id TOKEN_COLON type TOKEN_SEMICOLON
    5     | id TOKEN_COLON type TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON
    6     | id TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY

    7 stmtList: stmt stmtList
    8         | %empty

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE stmt
   11     | TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   12     | TOKEN_RETURN expr TOKEN_SEMICOLON
   13     | TOKEN_L_CURLY stmtList TOKEN_R_CURLY
   14     | TOKEN_PRINT optionalArgList TOKEN_SEMICOLON
   15     | decl
   16     | expr TOKEN_SEMICOLON

   17 inside: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE inside
   18       | TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside
   19       | TOKEN_RETURN expr TOKEN_SEMICOLON
   20       | TOKEN_L_CURLY stmtList TOKEN_R_CURLY
   21       | TOKEN_PRINT optionalArgList TOKEN_SEMICOLON
   22       | decl
   23       | expr TOKEN_SEMICOLON

   24 type: TOKEN_INTEGER
   25     | TOKEN_BOOLEAN
   26     | TOKEN_CHARACTER
   27     | TOKEN_STRING
   28     | TOKEN_FUNCTION type TOKEN_L_PAREN fDefOpt TOKEN_R_PAREN
   29     | TOKEN_ARRAY TOKEN_L_SUB expr TOKEN_R_SUB type
   30     | TOKEN_ARRAY TOKEN_L_SUB TOKEN_R_SUB type
   31     | TOKEN_VOID

   32 literal: TOKEN_INTEGER_LITERAL
   33        | TOKEN_CHARACTER_LITERAL
   34        | TOKEN_STRING_LITERAL
   35        | TOKEN_L_CURLY arrayLit TOKEN_R_CURLY

   36 arrayLit: expr
   37         | expr TOKEN_COMMA arrayLit

   38 boolean: TOKEN_TRUE
   39        | TOKEN_FALSE

   40 fDefOpt: %empty
   41        | fDef

   42 fDef: id TOKEN_COLON type
   43     | id TOKEN_COLON type TOKEN_COMMA fDef

   44 optionalArgList: %empty
   45                | arrayLit

   46 expr: id TOKEN_ASSIGNMENT expr
   47     | index TOKEN_ASSIGNMENT expr
   48     | expr1

   49 expr1: expr2 TOKEN_LOGIC_OR expr1
   50      | expr2

   51 expr2: expr3 TOKEN_LOGIC_AND expr2
   52      | expr3

   53 expr3: expr4 TOKEN_LT expr3
   54      | expr4 TOKEN_LE expr3
   55      | expr4 TOKEN_GT expr3
   56      | expr4 TOKEN_GE expr3
   57      | expr4 TOKEN_EQUIV expr3
   58      | expr4 TOKEN_NOT_EQUIV expr3
   59      | expr4

   60 expr4: expr5 TOKEN_ADD expr4
   61      | expr5 TOKEN_SUB expr4
   62      | expr5

   63 expr5: expr6 TOKEN_MULT expr5
   64      | expr6 TOKEN_DIVIDE expr5
   65      | expr6 TOKEN_MOD expr5
   66      | expr6

   67 expr6: expr7 TOKEN_EXP expr6
   68      | expr7

   69 expr7: TOKEN_SUB expr7
   70      | TOKEN_LOGIC_NOT expr7
   71      | expr8

   72 expr8: expr9 TOKEN_POST_INC
   73      | expr9 TOKEN_POST_DEC
   74      | expr9

   75 expr9: literal
   76      | TOKEN_L_PAREN expr TOKEN_R_PAREN
   77      | id
   78      | boolean
   79      | index
   80      | id TOKEN_L_PAREN optionalArgList TOKEN_R_PAREN

   81 index: expr9 TOKEN_L_SUB expr TOKEN_R_SUB

   82 id: TOKEN_IDENTIFIER

   83 opt_expr: %empty
   84         | expr


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_EOF (258) 1
TOKEN_ARRAY (259) 29 30
TOKEN_ELSE (260) 10 17
TOKEN_FALSE (261) 39
TOKEN_FOR (262) 11 18
TOKEN_FUNCTION (263) 28
TOKEN_IF (264) 9 10 17
TOKEN_PRINT (265) 14 21
TOKEN_RETURN (266) 12 19
TOKEN_TRUE (267) 38
TOKEN_VOID (268) 31
TOKEN_WHILE (269)
TOKEN_INTEGER (270) 24
TOKEN_BOOLEAN (271) 25
TOKEN_CHARACTER (272) 26
TOKEN_STRING (273) 27
TOKEN_INTEGER_LITERAL (274) 32
TOKEN_CHARACTER_LITERAL (275) 33
TOKEN_STRING_LITERAL (276) 34
TOKEN_IDENTIFIER (277) 82
TOKEN_L_PAREN (278) 9 10 11 17 18 28 76 80
TOKEN_R_PAREN (279) 9 10 11 17 18 28 76 80
TOKEN_L_SUB (280) 29 30 81
TOKEN_R_SUB (281) 29 30 81
TOKEN_POST_INC (282) 72
TOKEN_POST_DEC (283) 73
TOKEN_UNARY_NEG (284)
TOKEN_LOGIC_NOT (285) 70
TOKEN_EXP (286) 67
TOKEN_MULT (287) 63
TOKEN_DIVIDE (288) 64
TOKEN_MOD (289) 65
TOKEN_ADD (290) 60
TOKEN_SUB (291) 61 69
TOKEN_LT (292) 53
TOKEN_LE (293) 54
TOKEN_GT (294) 55
TOKEN_GE (295) 56
TOKEN_EQUIV (296) 57
TOKEN_NOT_EQUIV (297) 58
TOKEN_LOGIC_AND (298) 51
TOKEN_LOGIC_OR (299) 49
TOKEN_ASSIGNMENT (300) 5 6 46 47
TOKEN_SEMICOLON (301) 4 5 11 12 14 16 18 19 21 23
TOKEN_COLON (302) 4 5 6 42 43
TOKEN_COMMA (303) 37 43
TOKEN_L_CURLY (304) 6 13 20 35
TOKEN_R_CURLY (305) 6 13 20 35
TOKEN_BACKSLASH (306)
TOKEN_ERROR (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program <decl> (54)
    on left: 1, on right: 0
decl_list <decl> (55)
    on left: 2 3, on right: 1 2
decl <decl> (56)
    on left: 4 5 6, on right: 2 15 22
stmtList <stmt> (57)
    on left: 7 8, on right: 6 7 13 20
stmt <stmt> (58)
    on left: 9 10 11 12 13 14 15 16, on right: 7 9 10 11
inside <stmt> (59)
    on left: 17 18 19 20 21 22 23, on right: 10 17 18
type <type> (60)
    on left: 24 25 26 27 28 29 30 31, on right: 4 5 6 28 29 30 42 43
literal <expr> (61)
    on left: 32 33 34 35, on right: 75
arrayLit <expr> (62)
    on left: 36 37, on right: 35 37 45
boolean <expr> (63)
    on left: 38 39, on right: 78
fDefOpt <param_list> (64)
    on left: 40 41, on right: 28
fDef <param_list> (65)
    on left: 42 43, on right: 41 43
optionalArgList <expr> (66)
    on left: 44 45, on right: 14 21 80
expr <expr> (67)
    on left: 46 47 48, on right: 5 9 10 12 16 17 19 23 29 36 37 46
    47 76 81 84
expr1 <expr> (68)
    on left: 49 50, on right: 48 49
expr2 <expr> (69)
    on left: 51 52, on right: 49 50 51
expr3 <expr> (70)
    on left: 53 54 55 56 57 58 59, on right: 51 52 53 54 55 56 57 58
expr4 <expr> (71)
    on left: 60 61 62, on right: 53 54 55 56 57 58 59 60 61
expr5 <expr> (72)
    on left: 63 64 65 66, on right: 60 61 62 63 64 65
expr6 <expr> (73)
    on left: 67 68, on right: 63 64 65 66 67
expr7 <expr> (74)
    on left: 69 70 71, on right: 67 68 69 70
expr8 <expr> (75)
    on left: 72 73 74, on right: 71
expr9 <expr> (76)
    on left: 75 76 77 78 79 80, on right: 72 73 74 81
index <expr> (77)
    on left: 81, on right: 47 79
id <expr> (78)
    on left: 82, on right: 4 5 6 42 43 46 77 80
opt_expr <expr> (79)
    on left: 83 84, on right: 11 18


State 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    id         go to state 5


State 1

   82 id: TOKEN_IDENTIFIER .

    $default  reduce using rule 82 (id)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 7


State 4

    2 decl_list: decl . decl_list

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    id         go to state 5


State 5

    4 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
    5     | id . TOKEN_COLON type TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON
    6     | id . TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY

    TOKEN_COLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 8

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


State 9

    4 decl: id TOKEN_COLON . type TOKEN_SEMICOLON
    5     | id TOKEN_COLON . type TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON
    6     | id TOKEN_COLON . type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_FUNCTION   shift, and go to state 11
    TOKEN_VOID       shift, and go to state 12
    TOKEN_INTEGER    shift, and go to state 13
    TOKEN_BOOLEAN    shift, and go to state 14
    TOKEN_CHARACTER  shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16

    type  go to state 17


State 10

   29 type: TOKEN_ARRAY . TOKEN_L_SUB expr TOKEN_R_SUB type
   30     | TOKEN_ARRAY . TOKEN_L_SUB TOKEN_R_SUB type

    TOKEN_L_SUB  shift, and go to state 18


State 11

   28 type: TOKEN_FUNCTION . type TOKEN_L_PAREN fDefOpt TOKEN_R_PAREN

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_FUNCTION   shift, and go to state 11
    TOKEN_VOID       shift, and go to state 12
    TOKEN_INTEGER    shift, and go to state 13
    TOKEN_BOOLEAN    shift, and go to state 14
    TOKEN_CHARACTER  shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16

    type  go to state 19


State 12

   31 type: TOKEN_VOID .

    $default  reduce using rule 31 (type)


State 13

   24 type: TOKEN_INTEGER .

    $default  reduce using rule 24 (type)


State 14

   25 type: TOKEN_BOOLEAN .

    $default  reduce using rule 25 (type)


State 15

   26 type: TOKEN_CHARACTER .

    $default  reduce using rule 26 (type)


State 16

   27 type: TOKEN_STRING .

    $default  reduce using rule 27 (type)


State 17

    4 decl: id TOKEN_COLON type . TOKEN_SEMICOLON
    5     | id TOKEN_COLON type . TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON
    6     | id TOKEN_COLON type . TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY

    TOKEN_ASSIGNMENT  shift, and go to state 20
    TOKEN_SEMICOLON   shift, and go to state 21


State 18

   29 type: TOKEN_ARRAY TOKEN_L_SUB . expr TOKEN_R_SUB type
   30     | TOKEN_ARRAY TOKEN_L_SUB . TOKEN_R_SUB type

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_R_SUB              shift, and go to state 28
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 34
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 19

   28 type: TOKEN_FUNCTION type . TOKEN_L_PAREN fDefOpt TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 46


State 20

    5 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT . expr TOKEN_SEMICOLON
    6     | id TOKEN_COLON type TOKEN_ASSIGNMENT . TOKEN_L_CURLY stmtList TOKEN_R_CURLY

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 47

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 48
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 21

    4 decl: id TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 4 (decl)


State 22

   39 boolean: TOKEN_FALSE .

    $default  reduce using rule 39 (boolean)


State 23

   38 boolean: TOKEN_TRUE .

    $default  reduce using rule 38 (boolean)


State 24

   32 literal: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 32 (literal)


State 25

   33 literal: TOKEN_CHARACTER_LITERAL .

    $default  reduce using rule 33 (literal)


State 26

   34 literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 34 (literal)


State 27

   76 expr9: TOKEN_L_PAREN . expr TOKEN_R_PAREN

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 49
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 28

   30 type: TOKEN_ARRAY TOKEN_L_SUB TOKEN_R_SUB . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_FUNCTION   shift, and go to state 11
    TOKEN_VOID       shift, and go to state 12
    TOKEN_INTEGER    shift, and go to state 13
    TOKEN_BOOLEAN    shift, and go to state 14
    TOKEN_CHARACTER  shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16

    type  go to state 50


State 29

   70 expr7: TOKEN_LOGIC_NOT . expr7

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr7    go to state 51
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 30

   69 expr7: TOKEN_SUB . expr7

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr7    go to state 54
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 31

   35 literal: TOKEN_L_CURLY . arrayLit TOKEN_R_CURLY

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal   go to state 32
    arrayLit  go to state 55
    boolean   go to state 33
    expr      go to state 56
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45


State 32

   75 expr9: literal .

    $default  reduce using rule 75 (expr9)


State 33

   78 expr9: boolean .

    $default  reduce using rule 78 (expr9)


State 34

   29 type: TOKEN_ARRAY TOKEN_L_SUB expr . TOKEN_R_SUB type

    TOKEN_R_SUB  shift, and go to state 57


State 35

   48 expr: expr1 .

    $default  reduce using rule 48 (expr)


State 36

   49 expr1: expr2 . TOKEN_LOGIC_OR expr1
   50      | expr2 .

    TOKEN_LOGIC_OR  shift, and go to state 58

    $default  reduce using rule 50 (expr1)


State 37

   51 expr2: expr3 . TOKEN_LOGIC_AND expr2
   52      | expr3 .

    TOKEN_LOGIC_AND  shift, and go to state 59

    $default  reduce using rule 52 (expr2)


State 38

   53 expr3: expr4 . TOKEN_LT expr3
   54      | expr4 . TOKEN_LE expr3
   55      | expr4 . TOKEN_GT expr3
   56      | expr4 . TOKEN_GE expr3
   57      | expr4 . TOKEN_EQUIV expr3
   58      | expr4 . TOKEN_NOT_EQUIV expr3
   59      | expr4 .

    TOKEN_LT         shift, and go to state 60
    TOKEN_LE         shift, and go to state 61
    TOKEN_GT         shift, and go to state 62
    TOKEN_GE         shift, and go to state 63
    TOKEN_EQUIV      shift, and go to state 64
    TOKEN_NOT_EQUIV  shift, and go to state 65

    $default  reduce using rule 59 (expr3)


State 39

   60 expr4: expr5 . TOKEN_ADD expr4
   61      | expr5 . TOKEN_SUB expr4
   62      | expr5 .

    TOKEN_ADD  shift, and go to state 66
    TOKEN_SUB  shift, and go to state 67

    $default  reduce using rule 62 (expr4)


State 40

   63 expr5: expr6 . TOKEN_MULT expr5
   64      | expr6 . TOKEN_DIVIDE expr5
   65      | expr6 . TOKEN_MOD expr5
   66      | expr6 .

    TOKEN_MULT    shift, and go to state 68
    TOKEN_DIVIDE  shift, and go to state 69
    TOKEN_MOD     shift, and go to state 70

    $default  reduce using rule 66 (expr5)


State 41

   67 expr6: expr7 . TOKEN_EXP expr6
   68      | expr7 .

    TOKEN_EXP  shift, and go to state 71

    $default  reduce using rule 68 (expr6)


State 42

   71 expr7: expr8 .

    $default  reduce using rule 71 (expr7)


State 43

   72 expr8: expr9 . TOKEN_POST_INC
   73      | expr9 . TOKEN_POST_DEC
   74      | expr9 .
   81 index: expr9 . TOKEN_L_SUB expr TOKEN_R_SUB

    TOKEN_L_SUB     shift, and go to state 72
    TOKEN_POST_INC  shift, and go to state 73
    TOKEN_POST_DEC  shift, and go to state 74

    $default  reduce using rule 74 (expr8)


State 44

   47 expr: index . TOKEN_ASSIGNMENT expr
   79 expr9: index .

    TOKEN_ASSIGNMENT  shift, and go to state 75

    $default  reduce using rule 79 (expr9)


State 45

   46 expr: id . TOKEN_ASSIGNMENT expr
   77 expr9: id .
   80      | id . TOKEN_L_PAREN optionalArgList TOKEN_R_PAREN

    TOKEN_L_PAREN     shift, and go to state 76
    TOKEN_ASSIGNMENT  shift, and go to state 77

    $default  reduce using rule 77 (expr9)


State 46

   28 type: TOKEN_FUNCTION type TOKEN_L_PAREN . fDefOpt TOKEN_R_PAREN

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 40 (fDefOpt)

    fDefOpt  go to state 78
    fDef     go to state 79
    id       go to state 80


State 47

    6 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY . stmtList TOKEN_R_CURLY
   35 literal: TOKEN_L_CURLY . arrayLit TOKEN_R_CURLY

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    $default  reduce using rule 8 (stmtList)

    decl      go to state 86
    stmtList  go to state 87
    stmt      go to state 88
    literal   go to state 32
    arrayLit  go to state 55
    boolean   go to state 33
    expr      go to state 89
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 90


State 48

    5 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 91


State 49

   76 expr9: TOKEN_L_PAREN expr . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 92


State 50

   30 type: TOKEN_ARRAY TOKEN_L_SUB TOKEN_R_SUB type .

    $default  reduce using rule 30 (type)


State 51

   70 expr7: TOKEN_LOGIC_NOT expr7 .

    $default  reduce using rule 70 (expr7)


State 52

   79 expr9: index .

    $default  reduce using rule 79 (expr9)


State 53

   77 expr9: id .
   80      | id . TOKEN_L_PAREN optionalArgList TOKEN_R_PAREN

    TOKEN_L_PAREN  shift, and go to state 76

    $default  reduce using rule 77 (expr9)


State 54

   69 expr7: TOKEN_SUB expr7 .

    $default  reduce using rule 69 (expr7)


State 55

   35 literal: TOKEN_L_CURLY arrayLit . TOKEN_R_CURLY

    TOKEN_R_CURLY  shift, and go to state 93


State 56

   36 arrayLit: expr .
   37         | expr . TOKEN_COMMA arrayLit

    TOKEN_COMMA  shift, and go to state 94

    $default  reduce using rule 36 (arrayLit)


State 57

   29 type: TOKEN_ARRAY TOKEN_L_SUB expr TOKEN_R_SUB . type

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_FUNCTION   shift, and go to state 11
    TOKEN_VOID       shift, and go to state 12
    TOKEN_INTEGER    shift, and go to state 13
    TOKEN_BOOLEAN    shift, and go to state 14
    TOKEN_CHARACTER  shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16

    type  go to state 95


State 58

   49 expr1: expr2 TOKEN_LOGIC_OR . expr1

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr1    go to state 96
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 59

   51 expr2: expr3 TOKEN_LOGIC_AND . expr2

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr2    go to state 97
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 60

   53 expr3: expr4 TOKEN_LT . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 98
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 61

   54 expr3: expr4 TOKEN_LE . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 99
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 62

   55 expr3: expr4 TOKEN_GT . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 100
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 63

   56 expr3: expr4 TOKEN_GE . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 101
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 64

   57 expr3: expr4 TOKEN_EQUIV . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 102
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 65

   58 expr3: expr4 TOKEN_NOT_EQUIV . expr3

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr3    go to state 103
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 66

   60 expr4: expr5 TOKEN_ADD . expr4

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr4    go to state 104
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 67

   61 expr4: expr5 TOKEN_SUB . expr4

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr4    go to state 105
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 68

   63 expr5: expr6 TOKEN_MULT . expr5

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr5    go to state 106
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 69

   64 expr5: expr6 TOKEN_DIVIDE . expr5

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr5    go to state 107
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 70

   65 expr5: expr6 TOKEN_MOD . expr5

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr5    go to state 108
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 71

   67 expr6: expr7 TOKEN_EXP . expr6

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr6    go to state 109
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 52
    id       go to state 53


State 72

   81 index: expr9 TOKEN_L_SUB . expr TOKEN_R_SUB

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 110
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 73

   72 expr8: expr9 TOKEN_POST_INC .

    $default  reduce using rule 72 (expr8)


State 74

   73 expr8: expr9 TOKEN_POST_DEC .

    $default  reduce using rule 73 (expr8)


State 75

   47 expr: index TOKEN_ASSIGNMENT . expr

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 111
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 76

   80 expr9: id TOKEN_L_PAREN . optionalArgList TOKEN_R_PAREN

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 44 (optionalArgList)

    literal          go to state 32
    arrayLit         go to state 112
    boolean          go to state 33
    optionalArgList  go to state 113
    expr             go to state 56
    expr1            go to state 35
    expr2            go to state 36
    expr3            go to state 37
    expr4            go to state 38
    expr5            go to state 39
    expr6            go to state 40
    expr7            go to state 41
    expr8            go to state 42
    expr9            go to state 43
    index            go to state 44
    id               go to state 45


State 77

   46 expr: id TOKEN_ASSIGNMENT . expr

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 114
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 78

   28 type: TOKEN_FUNCTION type TOKEN_L_PAREN fDefOpt . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 115


State 79

   41 fDefOpt: fDef .

    $default  reduce using rule 41 (fDefOpt)


State 80

   42 fDef: id . TOKEN_COLON type
   43     | id . TOKEN_COLON type TOKEN_COMMA fDef

    TOKEN_COLON  shift, and go to state 116


State 81

   11 stmt: TOKEN_FOR . TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt

    TOKEN_L_PAREN  shift, and go to state 117


State 82

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE stmt

    TOKEN_L_PAREN  shift, and go to state 118


State 83

   14 stmt: TOKEN_PRINT . optionalArgList TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 44 (optionalArgList)

    literal          go to state 32
    arrayLit         go to state 112
    boolean          go to state 33
    optionalArgList  go to state 119
    expr             go to state 56
    expr1            go to state 35
    expr2            go to state 36
    expr3            go to state 37
    expr4            go to state 38
    expr5            go to state 39
    expr6            go to state 40
    expr7            go to state 41
    expr8            go to state 42
    expr9            go to state 43
    index            go to state 44
    id               go to state 45


State 84

   12 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 120
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 85

   13 stmt: TOKEN_L_CURLY . stmtList TOKEN_R_CURLY
   35 literal: TOKEN_L_CURLY . arrayLit TOKEN_R_CURLY

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    $default  reduce using rule 8 (stmtList)

    decl      go to state 86
    stmtList  go to state 121
    stmt      go to state 88
    literal   go to state 32
    arrayLit  go to state 55
    boolean   go to state 33
    expr      go to state 89
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 90


State 86

   15 stmt: decl .

    $default  reduce using rule 15 (stmt)


State 87

    6 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList . TOKEN_R_CURLY

    TOKEN_R_CURLY  shift, and go to state 122


State 88

    7 stmtList: stmt . stmtList

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    $default  reduce using rule 8 (stmtList)

    decl      go to state 86
    stmtList  go to state 123
    stmt      go to state 88
    literal   go to state 32
    boolean   go to state 33
    expr      go to state 124
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 90


State 89

   16 stmt: expr . TOKEN_SEMICOLON
   36 arrayLit: expr .
   37         | expr . TOKEN_COMMA arrayLit

    TOKEN_SEMICOLON  shift, and go to state 125
    TOKEN_COMMA      shift, and go to state 94

    $default  reduce using rule 36 (arrayLit)


State 90

    4 decl: id . TOKEN_COLON type TOKEN_SEMICOLON
    5     | id . TOKEN_COLON type TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON
    6     | id . TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY
   46 expr: id . TOKEN_ASSIGNMENT expr
   77 expr9: id .
   80      | id . TOKEN_L_PAREN optionalArgList TOKEN_R_PAREN

    TOKEN_L_PAREN     shift, and go to state 76
    TOKEN_ASSIGNMENT  shift, and go to state 77
    TOKEN_COLON       shift, and go to state 9

    $default  reduce using rule 77 (expr9)


State 91

    5 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT expr TOKEN_SEMICOLON .

    $default  reduce using rule 5 (decl)


State 92

   76 expr9: TOKEN_L_PAREN expr TOKEN_R_PAREN .

    $default  reduce using rule 76 (expr9)


State 93

   35 literal: TOKEN_L_CURLY arrayLit TOKEN_R_CURLY .

    $default  reduce using rule 35 (literal)


State 94

   37 arrayLit: expr TOKEN_COMMA . arrayLit

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal   go to state 32
    arrayLit  go to state 126
    boolean   go to state 33
    expr      go to state 56
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45


State 95

   29 type: TOKEN_ARRAY TOKEN_L_SUB expr TOKEN_R_SUB type .

    $default  reduce using rule 29 (type)


State 96

   49 expr1: expr2 TOKEN_LOGIC_OR expr1 .

    $default  reduce using rule 49 (expr1)


State 97

   51 expr2: expr3 TOKEN_LOGIC_AND expr2 .

    $default  reduce using rule 51 (expr2)


State 98

   53 expr3: expr4 TOKEN_LT expr3 .

    $default  reduce using rule 53 (expr3)


State 99

   54 expr3: expr4 TOKEN_LE expr3 .

    $default  reduce using rule 54 (expr3)


State 100

   55 expr3: expr4 TOKEN_GT expr3 .

    $default  reduce using rule 55 (expr3)


State 101

   56 expr3: expr4 TOKEN_GE expr3 .

    $default  reduce using rule 56 (expr3)


State 102

   57 expr3: expr4 TOKEN_EQUIV expr3 .

    $default  reduce using rule 57 (expr3)


State 103

   58 expr3: expr4 TOKEN_NOT_EQUIV expr3 .

    $default  reduce using rule 58 (expr3)


State 104

   60 expr4: expr5 TOKEN_ADD expr4 .

    $default  reduce using rule 60 (expr4)


State 105

   61 expr4: expr5 TOKEN_SUB expr4 .

    $default  reduce using rule 61 (expr4)


State 106

   63 expr5: expr6 TOKEN_MULT expr5 .

    $default  reduce using rule 63 (expr5)


State 107

   64 expr5: expr6 TOKEN_DIVIDE expr5 .

    $default  reduce using rule 64 (expr5)


State 108

   65 expr5: expr6 TOKEN_MOD expr5 .

    $default  reduce using rule 65 (expr5)


State 109

   67 expr6: expr7 TOKEN_EXP expr6 .

    $default  reduce using rule 67 (expr6)


State 110

   81 index: expr9 TOKEN_L_SUB expr . TOKEN_R_SUB

    TOKEN_R_SUB  shift, and go to state 127


State 111

   47 expr: index TOKEN_ASSIGNMENT expr .

    $default  reduce using rule 47 (expr)


State 112

   45 optionalArgList: arrayLit .

    $default  reduce using rule 45 (optionalArgList)


State 113

   80 expr9: id TOKEN_L_PAREN optionalArgList . TOKEN_R_PAREN

    TOKEN_R_PAREN  shift, and go to state 128


State 114

   46 expr: id TOKEN_ASSIGNMENT expr .

    $default  reduce using rule 46 (expr)


State 115

   28 type: TOKEN_FUNCTION type TOKEN_L_PAREN fDefOpt TOKEN_R_PAREN .

    $default  reduce using rule 28 (type)


State 116

   42 fDef: id TOKEN_COLON . type
   43     | id TOKEN_COLON . type TOKEN_COMMA fDef

    TOKEN_ARRAY      shift, and go to state 10
    TOKEN_FUNCTION   shift, and go to state 11
    TOKEN_VOID       shift, and go to state 12
    TOKEN_INTEGER    shift, and go to state 13
    TOKEN_BOOLEAN    shift, and go to state 14
    TOKEN_CHARACTER  shift, and go to state 15
    TOKEN_STRING     shift, and go to state 16

    type  go to state 129


State 117

   11 stmt: TOKEN_FOR TOKEN_L_PAREN . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 131


State 118

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN inside TOKEN_ELSE stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 132
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 119

   14 stmt: TOKEN_PRINT optionalArgList . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 133


State 120

   12 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 134


State 121

   13 stmt: TOKEN_L_CURLY stmtList . TOKEN_R_CURLY

    TOKEN_R_CURLY  shift, and go to state 135


State 122

    6 decl: id TOKEN_COLON type TOKEN_ASSIGNMENT TOKEN_L_CURLY stmtList TOKEN_R_CURLY .

    $default  reduce using rule 6 (decl)


State 123

    7 stmtList: stmt stmtList .

    $default  reduce using rule 7 (stmtList)


State 124

   16 stmt: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 125


State 125

   16 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 16 (stmt)


State 126

   37 arrayLit: expr TOKEN_COMMA arrayLit .

    $default  reduce using rule 37 (arrayLit)


State 127

   81 index: expr9 TOKEN_L_SUB expr TOKEN_R_SUB .

    $default  reduce using rule 81 (index)


State 128

   80 expr9: id TOKEN_L_PAREN optionalArgList TOKEN_R_PAREN .

    $default  reduce using rule 80 (expr9)


State 129

   42 fDef: id TOKEN_COLON type .
   43     | id TOKEN_COLON type . TOKEN_COMMA fDef

    TOKEN_COMMA  shift, and go to state 136

    $default  reduce using rule 42 (fDef)


State 130

   84 opt_expr: expr .

    $default  reduce using rule 84 (opt_expr)


State 131

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 137


State 132

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN inside TOKEN_ELSE stmt

    TOKEN_R_PAREN  shift, and go to state 138


State 133

   14 stmt: TOKEN_PRINT optionalArgList TOKEN_SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 134

   12 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 135

   13 stmt: TOKEN_L_CURLY stmtList TOKEN_R_CURLY .

    $default  reduce using rule 13 (stmt)


State 136

   43 fDef: id TOKEN_COLON type TOKEN_COMMA . fDef

    TOKEN_IDENTIFIER  shift, and go to state 1

    fDef  go to state 139
    id    go to state 80


State 137

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 140


State 138

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . inside TOKEN_ELSE stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 141
    TOKEN_IF                 shift, and go to state 142
    TOKEN_PRINT              shift, and go to state 143
    TOKEN_RETURN             shift, and go to state 144
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 145

    decl     go to state 146
    stmt     go to state 147
    inside   go to state 148
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 149
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 139

   43 fDef: id TOKEN_COLON type TOKEN_COMMA fDef .

    $default  reduce using rule 43 (fDef)


State 140

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt

    TOKEN_SEMICOLON  shift, and go to state 150


State 141

   11 stmt: TOKEN_FOR . TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR . TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside

    TOKEN_L_PAREN  shift, and go to state 151


State 142

    9 stmt: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE stmt
   17 inside: TOKEN_IF . TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE inside

    TOKEN_L_PAREN  shift, and go to state 152


State 143

   14 stmt: TOKEN_PRINT . optionalArgList TOKEN_SEMICOLON
   21 inside: TOKEN_PRINT . optionalArgList TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 44 (optionalArgList)

    literal          go to state 32
    arrayLit         go to state 112
    boolean          go to state 33
    optionalArgList  go to state 153
    expr             go to state 56
    expr1            go to state 35
    expr2            go to state 36
    expr3            go to state 37
    expr4            go to state 38
    expr5            go to state 39
    expr6            go to state 40
    expr7            go to state 41
    expr8            go to state 42
    expr9            go to state 43
    index            go to state 44
    id               go to state 45


State 144

   12 stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON
   19 inside: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 154
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 145

   13 stmt: TOKEN_L_CURLY . stmtList TOKEN_R_CURLY
   20 inside: TOKEN_L_CURLY . stmtList TOKEN_R_CURLY
   35 literal: TOKEN_L_CURLY . arrayLit TOKEN_R_CURLY

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    $default  reduce using rule 8 (stmtList)

    decl      go to state 86
    stmtList  go to state 155
    stmt      go to state 88
    literal   go to state 32
    arrayLit  go to state 55
    boolean   go to state 33
    expr      go to state 89
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 90


State 146

   15 stmt: decl .
   22 inside: decl .

    TOKEN_ELSE  reduce using rule 22 (inside)
    $default    reduce using rule 15 (stmt)


State 147

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 9 (stmt)


State 148

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 156


State 149

   16 stmt: expr . TOKEN_SEMICOLON
   23 inside: expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 157


State 150

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_R_PAREN stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 158


State 151

   11 stmt: TOKEN_FOR TOKEN_L_PAREN . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 159


State 152

    9 stmt: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN inside TOKEN_ELSE stmt
   17 inside: TOKEN_IF TOKEN_L_PAREN . expr TOKEN_R_PAREN inside TOKEN_ELSE inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    literal  go to state 32
    boolean  go to state 33
    expr     go to state 160
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 45


State 153

   14 stmt: TOKEN_PRINT optionalArgList . TOKEN_SEMICOLON
   21 inside: TOKEN_PRINT optionalArgList . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 161


State 154

   12 stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON
   19 inside: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 162


State 155

   13 stmt: TOKEN_L_CURLY stmtList . TOKEN_R_CURLY
   20 inside: TOKEN_L_CURLY stmtList . TOKEN_R_CURLY

    TOKEN_R_CURLY  shift, and go to state 163


State 156

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE . stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    decl     go to state 86
    stmt     go to state 164
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 124
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 157

   16 stmt: expr TOKEN_SEMICOLON .
   23 inside: expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 23 (inside)
    $default    reduce using rule 16 (stmt)


State 158

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_R_PAREN stmt

    TOKEN_R_PAREN  shift, and go to state 165


State 159

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside

    TOKEN_SEMICOLON  shift, and go to state 166


State 160

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN inside TOKEN_ELSE stmt
   17 inside: TOKEN_IF TOKEN_L_PAREN expr . TOKEN_R_PAREN inside TOKEN_ELSE inside

    TOKEN_R_PAREN  shift, and go to state 167


State 161

   14 stmt: TOKEN_PRINT optionalArgList TOKEN_SEMICOLON .
   21 inside: TOKEN_PRINT optionalArgList TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 21 (inside)
    $default    reduce using rule 14 (stmt)


State 162

   12 stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .
   19 inside: TOKEN_RETURN expr TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 19 (inside)
    $default    reduce using rule 12 (stmt)


State 163

   13 stmt: TOKEN_L_CURLY stmtList TOKEN_R_CURLY .
   20 inside: TOKEN_L_CURLY stmtList TOKEN_R_CURLY .

    TOKEN_ELSE  reduce using rule 20 (inside)
    $default    reduce using rule 13 (stmt)


State 164

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 165

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN . stmt

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 81
    TOKEN_IF                 shift, and go to state 82
    TOKEN_PRINT              shift, and go to state 83
    TOKEN_RETURN             shift, and go to state 84
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 85

    decl     go to state 86
    stmt     go to state 168
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 124
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 166

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 169


State 167

    9 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . stmt
   10     | TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . inside TOKEN_ELSE stmt
   17 inside: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN . inside TOKEN_ELSE inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 141
    TOKEN_IF                 shift, and go to state 142
    TOKEN_PRINT              shift, and go to state 143
    TOKEN_RETURN             shift, and go to state 144
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 145

    decl     go to state 146
    stmt     go to state 147
    inside   go to state 170
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 149
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 168

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt .

    $default  reduce using rule 11 (stmt)


State 169

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside

    TOKEN_SEMICOLON  shift, and go to state 171


State 170

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside . TOKEN_ELSE stmt
   17 inside: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside . TOKEN_ELSE inside

    TOKEN_ELSE  shift, and go to state 172


State 171

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON . opt_expr TOKEN_R_PAREN inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 31

    $default  reduce using rule 83 (opt_expr)

    literal   go to state 32
    boolean   go to state 33
    expr      go to state 130
    expr1     go to state 35
    expr2     go to state 36
    expr3     go to state 37
    expr4     go to state 38
    expr5     go to state 39
    expr6     go to state 40
    expr7     go to state 41
    expr8     go to state 42
    expr9     go to state 43
    index     go to state 44
    id        go to state 45
    opt_expr  go to state 173


State 172

   10 stmt: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE . stmt
   17 inside: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE . inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 141
    TOKEN_IF                 shift, and go to state 142
    TOKEN_PRINT              shift, and go to state 143
    TOKEN_RETURN             shift, and go to state 144
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 145

    decl     go to state 146
    stmt     go to state 164
    inside   go to state 174
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 149
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 173

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_R_PAREN stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr . TOKEN_R_PAREN inside

    TOKEN_R_PAREN  shift, and go to state 175


State 174

   17 inside: TOKEN_IF TOKEN_L_PAREN expr TOKEN_R_PAREN inside TOKEN_ELSE inside .

    $default  reduce using rule 17 (inside)


State 175

   11 stmt: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN . stmt
   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN . inside

    TOKEN_FALSE              shift, and go to state 22
    TOKEN_FOR                shift, and go to state 141
    TOKEN_IF                 shift, and go to state 142
    TOKEN_PRINT              shift, and go to state 143
    TOKEN_RETURN             shift, and go to state 144
    TOKEN_TRUE               shift, and go to state 23
    TOKEN_INTEGER_LITERAL    shift, and go to state 24
    TOKEN_CHARACTER_LITERAL  shift, and go to state 25
    TOKEN_STRING_LITERAL     shift, and go to state 26
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_L_PAREN            shift, and go to state 27
    TOKEN_LOGIC_NOT          shift, and go to state 29
    TOKEN_SUB                shift, and go to state 30
    TOKEN_L_CURLY            shift, and go to state 145

    decl     go to state 146
    stmt     go to state 168
    inside   go to state 176
    literal  go to state 32
    boolean  go to state 33
    expr     go to state 149
    expr1    go to state 35
    expr2    go to state 36
    expr3    go to state 37
    expr4    go to state 38
    expr5    go to state 39
    expr6    go to state 40
    expr7    go to state 41
    expr8    go to state 42
    expr9    go to state 43
    index    go to state 44
    id       go to state 90


State 176

   18 inside: TOKEN_FOR TOKEN_L_PAREN opt_expr TOKEN_SEMICOLON opt_expr TOKEN_SEMICOLON opt_expr TOKEN_R_PAREN inside .

    $default  reduce using rule 18 (inside)
